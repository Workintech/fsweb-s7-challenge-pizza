{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\ddryl\\\\Desktop\\\\workintech\\\\8.hafta\\\\fsweb-s7-challenge-pizza\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\ddryl\\\\Desktop\\\\workintech\\\\8.hafta\\\\fsweb-s7-challenge-pizza\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n/* IMPORT */\nimport _ from '../utils/index.js';\nimport Type from './type.js';\nimport { TYPE } from '../constants.js';\n/* MAIN */\nvar Channels = /*#__PURE__*/function () {\n  /* CONSTRUCTOR */\n  function Channels(data, color) {\n    _classCallCheck(this, Channels);\n    this.color = color;\n    this.changed = false;\n    this.data = data; //TSC\n    this.type = new Type();\n  }\n  /* API */\n  _createClass(Channels, [{\n    key: \"set\",\n    value: function set(data, color) {\n      this.color = color;\n      this.changed = false;\n      this.data = data; //TSC\n      this.type.type = TYPE.ALL;\n      return this;\n    } /* HELPERS */\n  }, {\n    key: \"_ensureHSL\",\n    value: function _ensureHSL() {\n      var data = this.data;\n      var h = data.h,\n        s = data.s,\n        l = data.l;\n      if (h === undefined) data.h = _.channel.rgb2hsl(data, 'h');\n      if (s === undefined) data.s = _.channel.rgb2hsl(data, 's');\n      if (l === undefined) data.l = _.channel.rgb2hsl(data, 'l');\n    }\n  }, {\n    key: \"_ensureRGB\",\n    value: function _ensureRGB() {\n      var data = this.data;\n      var r = data.r,\n        g = data.g,\n        b = data.b;\n      if (r === undefined) data.r = _.channel.hsl2rgb(data, 'r');\n      if (g === undefined) data.g = _.channel.hsl2rgb(data, 'g');\n      if (b === undefined) data.b = _.channel.hsl2rgb(data, 'b');\n    } /* GETTERS */\n  }, {\n    key: \"r\",\n    get: function get() {\n      var data = this.data;\n      var r = data.r;\n      if (!this.type.is(TYPE.HSL) && r !== undefined) return r;\n      this._ensureHSL();\n      return _.channel.hsl2rgb(data, 'r');\n    },\n    /* SETTERS */set: function set(r) {\n      this.type.set(TYPE.RGB);\n      this.changed = true;\n      this.data.r = r;\n    }\n  }, {\n    key: \"g\",\n    get: function get() {\n      var data = this.data;\n      var g = data.g;\n      if (!this.type.is(TYPE.HSL) && g !== undefined) return g;\n      this._ensureHSL();\n      return _.channel.hsl2rgb(data, 'g');\n    },\n    set: function set(g) {\n      this.type.set(TYPE.RGB);\n      this.changed = true;\n      this.data.g = g;\n    }\n  }, {\n    key: \"b\",\n    get: function get() {\n      var data = this.data;\n      var b = data.b;\n      if (!this.type.is(TYPE.HSL) && b !== undefined) return b;\n      this._ensureHSL();\n      return _.channel.hsl2rgb(data, 'b');\n    },\n    set: function set(b) {\n      this.type.set(TYPE.RGB);\n      this.changed = true;\n      this.data.b = b;\n    }\n  }, {\n    key: \"h\",\n    get: function get() {\n      var data = this.data;\n      var h = data.h;\n      if (!this.type.is(TYPE.RGB) && h !== undefined) return h;\n      this._ensureRGB();\n      return _.channel.rgb2hsl(data, 'h');\n    },\n    set: function set(h) {\n      this.type.set(TYPE.HSL);\n      this.changed = true;\n      this.data.h = h;\n    }\n  }, {\n    key: \"s\",\n    get: function get() {\n      var data = this.data;\n      var s = data.s;\n      if (!this.type.is(TYPE.RGB) && s !== undefined) return s;\n      this._ensureRGB();\n      return _.channel.rgb2hsl(data, 's');\n    },\n    set: function set(s) {\n      this.type.set(TYPE.HSL);\n      this.changed = true;\n      this.data.s = s;\n    }\n  }, {\n    key: \"l\",\n    get: function get() {\n      var data = this.data;\n      var l = data.l;\n      if (!this.type.is(TYPE.RGB) && l !== undefined) return l;\n      this._ensureRGB();\n      return _.channel.rgb2hsl(data, 'l');\n    },\n    set: function set(l) {\n      this.type.set(TYPE.HSL);\n      this.changed = true;\n      this.data.l = l;\n    }\n  }, {\n    key: \"a\",\n    get: function get() {\n      return this.data.a;\n    },\n    set: function set(a) {\n      this.changed = true;\n      this.data.a = a;\n    }\n  }]);\n  return Channels;\n}();\n/* EXPORT */\nexport default Channels;","map":null,"metadata":{},"sourceType":"module"}