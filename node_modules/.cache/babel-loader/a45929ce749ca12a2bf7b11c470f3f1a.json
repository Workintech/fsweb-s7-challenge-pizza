{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\ddryl\\\\Desktop\\\\workintech\\\\8.hafta\\\\fsweb-s7-challenge-pizza\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n/* IMPORT */\nimport _ from '../utils/index.js';\nimport ChannelsReusable from '../channels/reusable.js';\n/* MAIN */\nvar RGB = {\n  /* VARIABLES */\n  re: /^rgba?\\(\\s*?(-?(?:\\d+(?:\\.\\d+)?|(?:\\.\\d+))(?:e\\d+)?(%?))\\s*?(?:,|\\s)\\s*?(-?(?:\\d+(?:\\.\\d+)?|(?:\\.\\d+))(?:e\\d+)?(%?))\\s*?(?:,|\\s)\\s*?(-?(?:\\d+(?:\\.\\d+)?|(?:\\.\\d+))(?:e\\d+)?(%?))(?:\\s*?(?:,|\\/)\\s*?\\+?(-?(?:\\d+(?:\\.\\d+)?|(?:\\.\\d+))(?:e\\d+)?(%?)))?\\s*?\\)$/i,\n  /* API */\n  parse: function parse(color) {\n    var charCode = color.charCodeAt(0);\n    if (charCode !== 114 && charCode !== 82) return; // 'r'/'R'\n    var match = color.match(RGB.re);\n    if (!match) return;\n    var _match = _slicedToArray(match, 9),\n      r = _match[1],\n      isRedPercentage = _match[2],\n      g = _match[3],\n      isGreenPercentage = _match[4],\n      b = _match[5],\n      isBluePercentage = _match[6],\n      a = _match[7],\n      isAlphaPercentage = _match[8];\n    return ChannelsReusable.set({\n      r: _.channel.clamp.r(isRedPercentage ? parseFloat(r) * 2.55 : parseFloat(r)),\n      g: _.channel.clamp.g(isGreenPercentage ? parseFloat(g) * 2.55 : parseFloat(g)),\n      b: _.channel.clamp.b(isBluePercentage ? parseFloat(b) * 2.55 : parseFloat(b)),\n      a: a ? _.channel.clamp.a(isAlphaPercentage ? parseFloat(a) / 100 : parseFloat(a)) : 1\n    }, color);\n  },\n  stringify: function stringify(channels) {\n    var r = channels.r,\n      g = channels.g,\n      b = channels.b,\n      a = channels.a;\n    if (a < 1) {\n      // RGBA\n      return \"rgba(\".concat(_.lang.round(r), \", \").concat(_.lang.round(g), \", \").concat(_.lang.round(b), \", \").concat(_.lang.round(a), \")\");\n    } else {\n      // RGB\n      return \"rgb(\".concat(_.lang.round(r), \", \").concat(_.lang.round(g), \", \").concat(_.lang.round(b), \")\");\n    }\n  }\n};\n/* EXPORT */\nexport default RGB;","map":null,"metadata":{},"sourceType":"module"}